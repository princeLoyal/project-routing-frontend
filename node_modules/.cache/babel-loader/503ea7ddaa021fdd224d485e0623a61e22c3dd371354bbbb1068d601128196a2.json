{"ast":null,"code":"import { uiActions } from \"./index\";\nimport { cartActions } from \"./cartSlice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.setNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-c3510-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending Cart details failed.');\n      }\n      ;\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.setNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent Cart data succesfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending Cart details failed.'\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-6b4a6.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","sendCartData","cart","dispatch","setNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","fetchCartData","fetchData","data","json","cartData","replaceCart","items","totalQuantity"],"sources":["C:/Users/Prince/Desktop/myReactProjects/advanced-redux/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./index\";\r\nimport { cartActions } from \"./cartSlice\";\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.setNotification({\r\n            status:'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data!'\r\n        }));\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://react-http-c3510-default-rtdb.firebaseio.com/cart.json', {\r\n                method: 'PUT',\r\n                body: JSON.stringify(cart)\r\n            });\r\n\r\n            if(!response.ok){\r\n                throw new Error('Sending Cart details failed.');\r\n            };\r\n        };\r\n        try {\r\n            await sendRequest();\r\n            dispatch(uiActions.setNotification({\r\n                status:'success',\r\n                title: 'Success!',\r\n                message: 'Sent Cart data succesfully'\r\n              }));\r\n        } catch (error) {\r\n            dispatch(uiActions.setNotification({\r\n                status:'error',\r\n                title: 'Error!',\r\n                message: 'Sending Cart details failed.'\r\n              }));\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n      const fetchData = async () => {\r\n        const response = await fetch(\r\n          'https://react-http-6b4a6.firebaseio.com/cart.json'\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Could not fetch cart data!');\r\n        }\r\n  \r\n        const data = await response.json();\r\n  \r\n        return data;\r\n      };\r\n  \r\n      try {\r\n        const cartData = await fetchData();\r\n        dispatch(\r\n          cartActions.replaceCart({\r\n            items: cartData.items || [],\r\n            totalQuantity: cartData.totalQuantity,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        dispatch(\r\n          uiActions.setNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Fetching cart data failed!',\r\n          })\r\n        );\r\n      }\r\n    };\r\n  };\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,SAAS;AACnC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAACJ,SAAS,CAACK,eAAe,CAAC;MAC/BC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAAE;QAC3FC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC7B,CAAC,CAAC;MAEF,IAAG,CAACO,QAAQ,CAACM,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACnD;MAAC;IACL,CAAC;IACD,IAAI;MACA,MAAMR,WAAW,EAAE;MACnBL,QAAQ,CAACJ,SAAS,CAACK,eAAe,CAAC;QAC/BC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZd,QAAQ,CAACJ,SAAS,CAACK,eAAe,CAAC;QAC/BC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACT;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMW,aAAa,GAAG,MAAM;EAC/B,OAAO,MAAOf,QAAQ,IAAK;IACzB,MAAMgB,SAAS,GAAG,YAAY;MAC5B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDAAmD,CACpD;MAED,IAAI,CAACD,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMI,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMH,SAAS,EAAE;MAClChB,QAAQ,CACNH,WAAW,CAACuB,WAAW,CAAC;QACtBC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG;MAC1B,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdd,QAAQ,CACNJ,SAAS,CAACK,eAAe,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}